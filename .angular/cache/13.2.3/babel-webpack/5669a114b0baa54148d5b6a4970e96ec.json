{"ast":null,"code":"import _classCallCheck from \"D:\\\\Angular\\\\OffreStage-Angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\Angular\\\\OffreStage-Angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport { Renderer2, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\nimport { Location } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./shared/navbar/navbar.component\";\nimport * as i4 from \"./shared/footer/footer.component\";\nvar didScroll;\nvar lastScrollTop = 0;\nvar delta = 5;\nvar navbarHeight = 0;\nexport var AppComponent = /*#__PURE__*/(function () {\n  var AppComponent = /*#__PURE__*/function () {\n    function AppComponent(renderer, router, document, element, location) {\n      _classCallCheck(this, AppComponent);\n\n      this.renderer = renderer;\n      this.router = router;\n      this.document = document;\n      this.element = element;\n      this.location = location;\n    }\n\n    _createClass(AppComponent, [{\n      key: \"hasScrolled\",\n      value: function hasScrolled() {\n        var st = window.pageYOffset; // Make sure they scroll more than delta\n\n        if (Math.abs(lastScrollTop - st) <= delta) return;\n        var navbar = document.getElementsByTagName('nav')[0]; // If they scrolled down and are past the navbar, add class .headroom--unpinned.\n        // This is necessary so you never see what is \"behind\" the navbar.\n\n        if (st > lastScrollTop && st > navbarHeight) {\n          // Scroll Down\n          if (navbar.classList.contains('headroom--pinned')) {\n            navbar.classList.remove('headroom--pinned');\n            navbar.classList.add('headroom--unpinned');\n          } // $('.navbar.headroom--pinned').removeClass('headroom--pinned').addClass('headroom--unpinned');\n\n        } else {\n          // Scroll Up\n          //  $(window).height()\n          if (st + window.innerHeight < document.body.scrollHeight) {\n            // $('.navbar.headroom--unpinned').removeClass('headroom--unpinned').addClass('headroom--pinned');\n            if (navbar.classList.contains('headroom--unpinned')) {\n              navbar.classList.remove('headroom--unpinned');\n              navbar.classList.add('headroom--pinned');\n            }\n          }\n        }\n\n        lastScrollTop = st;\n      }\n    }, {\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var navbar = this.element.nativeElement.children[0].children[0];\n        this.hasScrolled();\n      }\n    }]);\n\n    return AppComponent;\n  }();\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Location));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    hostBindings: function AppComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function AppComponent_scroll_HostBindingHandler($event) {\n          return ctx.hasScrolled($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 3,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-navbar\");\n        i0.ɵɵelement(1, \"router-outlet\");\n        i0.ɵɵelement(2, \"app-footer\");\n      }\n    },\n    directives: [i3.NavbarComponent, i1.RouterOutlet, i4.FooterComponent],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}